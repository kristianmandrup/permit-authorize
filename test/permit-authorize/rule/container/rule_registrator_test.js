// Generated by LiveScript 1.2.0
(function(){
  var requires, User, Book, Registrator, expect, createRegis;
  requires = require('../../../../requires');
  requires.test('test_setup');
  User = requires.fix('user');
  Book = requires.fix('book');
  Registrator = requires.rule('container').RuleRegistrator;
  expect = require('chai').expect;
  createRegis = function(container, debug){
    debug == null && (debug = true);
    return new Registrator(container, debug);
  };
  describe('RuleRegistrator', function(){
    var act, action, actions, subjects, registrator, container, book;
    return context('basic repo', function(){
      before(function(){
        container = {
          can: {},
          cannot: {}
        };
        registrator = createRegis(container);
        act = 'can';
        action = 'edit';
        actions = ['edit', 'publish'];
        return subjects = ['book', 'article'];
      });
      return describe('register-rule (act, actions, subjects)', function(){
        return specify('registers a rule', function(){
          var res;
          res = registrator.register(act, actions, subjects);
          return expect(res).to.equal(registrator);
        });
      });
    });
  });
}).call(this);
