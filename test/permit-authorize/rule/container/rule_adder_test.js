// Generated by LiveScript 1.2.0
(function(){
  var requires, User, Book, Adder, expect, createAdder;
  requires = require('../../../../requires');
  requires.test('test_setup');
  User = requires.fix('user');
  Book = requires.fix('book');
  Adder = requires.rule('container').RuleAdder;
  expect = require('chai').expect;
  createAdder = function(container, action, subjects, debug){
    debug == null && (debug = true);
    return new Adder(container, action, subjects, debug);
  };
  describe('RuleAdder', function(){
    var act, action, actions, subjects, adder, container, book;
    return context('basic repo', function(){
      before(function(){
        container = {};
        act = 'can';
        action = 'edit';
        actions = ['edit', 'publish'];
        subjects = ['book', 'article'];
        return adder = createAdder(container, action, subjects);
      });
      return describe('add (container, action, subjects)', function(){
        return specify('adds the rule to container', function(){
          return expect(adder.add()).to.equal(adder);
        });
      });
    });
  });
}).call(this);
