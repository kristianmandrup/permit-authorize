// Generated by LiveScript 1.2.0
(function(){
  var requires, Matcher, matcher;
  requires = require('../../../../requires');
  requires.test('test_setup');
  Matcher = requires.lib('access_request').matcher.BaseMatcher;
  matcher = function(req){
    return new Matcher(req);
  };
  describe('BaseMatcher', function(){
    var baseMatcher, requests;
    requests = {};
    before(function(){
      return requests.empty = {};
    });
    return describe('create', function(){
      context('no access request', function(){
        before(function(){
          return baseMatcher = matcher();
        });
        return specify('must have access request', function(){
          return baseMatcher.accessRequest.should.eql({});
        });
      });
      return context('empty access request', function(){
        before(function(){
          return baseMatcher = matcher(requests.empty);
        });
        specify('must be a user matcher', function(){
          return baseMatcher.should.be.an.instanceOf(Matcher);
        });
        specify('must have access request', function(){
          return baseMatcher.accessRequest.should.eql(requests.empty);
        });
        return specify('must have an intersect', function(){
          return baseMatcher.intersect.should.have.property('on');
        });
      });
    });
  });
}).call(this);
