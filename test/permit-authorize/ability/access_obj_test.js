// Generated by LiveScript 1.2.0
(function(){
  var requires, User, Book, createRequest, createUser, access, ability, Ability;
  requires = require('../../../requires');
  requires.test('test_setup');
  User = requires.fix('user');
  Book = requires.fix('book');
  createRequest = requires.fac('create-request');
  createUser = requires.fac('create-user');
  access = require('./access');
  ability = require('./abilities');
  Ability = requires.lib('ability');
  describe('Ability', function(){
    var abook, book, requests, users, res, bookRequest;
    book = function(title){
      return new Book({
        title: title
      });
    };
    requests = {};
    users = {};
    res = {};
    bookRequest = function(action){
      return {
        user: {},
        action: action,
        subject: abook
      };
    };
    before(function(){
      abook = book('hello');
      requests.empty = {};
      requests.guest = createRequest.roleAccess('guest');
      return requests.readBook = bookRequest('read');
    });
    return describe('access-obj', function(){
      context('Ability for kris', function(){
        before(function(){
          res.empty = ability.kris.accessObj(requests.empty);
          return res.guest = ability.kris.accessObj(requests.guest);
        });
        specify('extends empty access with user thas has a name', function(){
          return res.empty.user.should.have.property('name');
        });
        specify('extends empty access with user', function(){
          return res.empty.user.name.should.eql('kris');
        });
        return specify('extends access with user.role', function(){
          return res.guest.user.should.have.property('role');
        });
      });
      return context('Guest ability', function(){
        return describe('access-obj', function(){
          return context('access-obj extended with read-book-access', function(){
            before(function(){
              return res.readBook = ability.guest.accessObj(requests.readBook);
            });
            specify('adds user.role: guest', function(){
              return res.readBook.user.role.should.eql('guest');
            });
            specify('adds action: read', function(){
              return res.readBook.action.should.eql('read');
            });
            return specify('adds subject: book', function(){
              return res.readBook.subject.should.eql(abook);
            });
          });
        });
      });
    });
  });
}).call(this);
