// Generated by LiveScript 1.2.0
(function(){
  var requires, ability, matchers, BaseMatcher;
  requires = require('../../../requires');
  requires.test('test_setup');
  ability = require('../ability/abilities');
  matchers = requires.lib('matchers');
  BaseMatcher = matchers.BaseMatcher;
  describe('BaseMatcher', function(){
    var matcher, requests;
    requests = {};
    before(function(){
      return requests.empty = {};
    });
    return describe('create', function(){
      context('no access request', function(){
        before(function(){
          return matcher = new BaseMatcher;
        });
        return specify('must have access request', function(){
          return matcher.accessRequest.should.eql({});
        });
      });
      return context('empty access request', function(){
        before(function(){
          return matcher = new BaseMatcher(requests.empty);
        });
        specify('must be a user matcher', function(){
          return matcher.should.be.an.instanceOf(BaseMatcher);
        });
        specify('must have access request', function(){
          return matcher.accessRequest.should.eql(requests.empty);
        });
        return specify('must have an intersect', function(){
          return matcher.intersect.should.have.property('on');
        });
      });
    });
  });
}).call(this);
