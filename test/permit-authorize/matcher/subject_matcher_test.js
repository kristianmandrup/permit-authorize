// Generated by LiveScript 1.2.0
(function(){
  var requires, Book, matchers, SubjectMatcher;
  requires = require('../../../requires');
  requires.test('test_setup');
  Book = requires.fix('book');
  matchers = requires.lib('matchers');
  SubjectMatcher = matchers.SubjectMatcher;
  describe('SubjectMatcher', function(){
    var subjectMatcher, book, bookTitle, requests;
    requests = {};
    before(function(){
      book = new Book({
        title: 'the return of the jedi'
      });
      return requests.book = {
        subject: book
      };
    });
    describe('create', function(){
      beforeEach(function(){
        return subjectMatcher = new SubjectMatcher(requests.book);
      });
      return specify('must have admin access request', function(){
        return subjectMatcher.accessRequest.should.eql(requests.book);
      });
    });
    return describe('match', function(){
      beforeEach(function(){
        return subjectMatcher = new SubjectMatcher(requests.book);
      });
      specify('should match book: the return of the jedi', function(){
        return subjectMatcher.match({
          title: book.title
        }).should.be['true'];
      });
      specify('should NOT match book: the return to oz', function(){
        return subjectMatcher.match({
          title: 'the return to oz'
        }).should.be['false'];
      });
      return specify('should match on no argument', function(){
        return subjectMatcher.match().should.be['true'];
      });
    });
  });
}).call(this);
