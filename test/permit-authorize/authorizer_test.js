// Generated by LiveScript 1.2.0
(function(){
  var requires, lo, User, Book, createRequest, createUser, createPermit, Authorizer, Ability;
  requires = require('../../requires');
  requires.test('test_setup');
  lo = require('lodash');
  User = requires.fix('user');
  Book = requires.fix('book');
  createRequest = requires.fac('create-request');
  createUser = requires.fac('create-user');
  createPermit = requires.fac('create-permit');
  Authorizer = requires.lib('authorizer');
  Ability = requires.lib('ability');
  describe('Authorizer', function(){
    var ctx, users, requests, permits, authorizers, books, book, authorizer;
    users = {};
    requests = {};
    permits = {};
    authorizers = {};
    books = {};
    book = function(title){
      return new Book({
        title: title
      });
    };
    authorizer = function(user){
      return new Authorizer(user);
    };
    before(function(){
      books.hello = book('hello');
      users.guest = createUser.guest();
      permits.guest = createPermit.matching.role.guest();
      ctx = {
        currentUser: users.guest
      };
      authorizers.basic = authorizer(users.guest);
      return authorizers.basic.debugOn();
    });
    describe('create', function(){
      return specify('should set user', function(){
        return authorizers.basic.user.should.eql(users.guest);
      });
    });
    return describe('run', function(){
      xcontext('read any book (collection name) request by guest user', function(){
        before(function(){
          return requests.readBookCollection = {
            action: 'read',
            subject: 'book'
          };
        });
        return specify.only('user is authorized to read book collection', function(){
          return authorizers.basic.run(requests.readBookCollection).should.be['true'];
        });
      });
      return context('read actual book instance request by guest user', function(){
        return specify('user is authorized to read book', function(){
          return authorizers.basic.run({
            action: 'read',
            subject: book()
          }).should.be['true'];
        });
      });
    });
  });
}).call(this);
