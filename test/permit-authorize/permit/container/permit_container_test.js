// Generated by LiveScript 1.2.0
(function(){
  var requires, Permit, RuleRepo, PermitMatcher, PermitAllower, permitFor, Book;
  requires = require('../../../../requires');
  requires.test('test_setup');
  Permit = requires.lib('permit').Permit;
  RuleRepo = requires.rule('repo').RuleRepo;
  PermitMatcher = requires.permit('matcher').UsePermitMatcher;
  PermitAllower = requires.lib('allower').PermitAllower;
  permitFor = requires.permit('factory').permitFor;
  Book = requires.fix('book');
  describe('Permit', function(){
    var permits;
    permits = {};
    before(function(){
      return permits.hello = new Permit('hello');
    });
    return describe('use', function(){
      return context('single permit named hello', function(){
        return specify('using Object adds object to permit', function(){
          return permits.hello.use({
            state: 'on'
          });
        });
      });
    });
  });
}).call(this);
