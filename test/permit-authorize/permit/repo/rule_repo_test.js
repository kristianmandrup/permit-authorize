// Generated by LiveScript 1.2.0
(function(){
  var requires, Permit, PermitRegistry, RuleRepo;
  requires = require('../../../../requires');
  requires.test('test_setup');
  Permit = requires.lib('permit');
  PermitRegistry = requires.permit('permit-registry');
  RuleRepo = requires.rule('rule_repo');
  describe('Permit', function(){
    var permits;
    permits = {};
    describe('rule-repo', function(){
      beforeEach(function(){
        return permits.empty = new Permit;
      });
      afterEach(function(){
        return PermitRegistry.clearAll();
      });
      specify('has a rule-repo', function(){
        return permits.empty.ruleRepo.constructor.should.eql(RuleRepo);
      });
      specify('has same name as permit', function(){
        return permits.empty.ruleRepo.name.should.eql(permits.empty.name);
      });
      specify('has empty can-rules', function(){
        return permits.empty.ruleRepo.canRules.should.eql({});
      });
      return specify('has empty cannot-rules', function(){
        return permits.empty.ruleRepo.canRules.should.eql({});
      });
    });
    describe('can rules', function(){
      specify('are empty', function(){
        return permits.empty.canRules().should.be.empty;
      });
      return specify('same as repo rules', function(){
        return permits.empty.canRules().should.be.eql(permits.empty.ruleRepo.canRules);
      });
    });
    return describe('cannot rules', function(){
      specify('are empty', function(){
        return permits.empty.cannotRules().should.be.empty;
      });
      return specify('same as repo rules', function(){
        return permits.empty.cannotRules().should.be.eql(permits.empty.ruleRepo.cannotRules);
      });
    });
  });
}).call(this);
