// Generated by LiveScript 1.2.0
(function(){
  var requires, Matcher, expect;
  requires = require('../../../../requires');
  requires.test('test_setup');
  Matcher = requires.permit('matcher').CompiledMatcher;
  expect = require('chai').expect;
  describe('CompiledMatcher', function(){
    var validContext;
    before(function(){
      return validContext = {
        name: 'hello',
        matchesOn: {
          role: ['editor', 'admin'],
          action: ['read']
        },
        matchOn: function(ar){
          return true;
        }
      };
    });
    describe('create w invalid context', function(){
      return specify('throws', function(){
        return expect(function(){
          return new Matcher;
        }).to['throw'];
      });
    });
    describe('create w valid context', function(){
      return specify('throws', function(){
        return expect(function(){
          return new Matcher(validContext);
        }).to.not['throw'];
      });
    });
    context('created w context missin matchOn fun', function(){
      var compiler, compiled, noMatchContext;
      before(function(){
        noMatchContext = {
          role: ['editor', 'admin'],
          action: ['read']
        };
        return compiler = new Matcher(noMatchContext, true);
      });
      return describe('matching', function(){
        return specify('throws', function(){
          return expect(function(){
            return compiler.match();
          }).to['throw'];
        });
      });
    });
    return context('created w context', function(){
      var compiler, compiled;
      before(function(){
        return compiler = new Matcher(validContext, true);
      });
      return describe('matching compiled', function(){
        before(function(){
          return compiled = compiler.match();
        });
        return specify('nothing', function(){
          console.log(compiled);
          return expect(compiled).to.eql(false);
        });
      });
    });
  });
}).call(this);
