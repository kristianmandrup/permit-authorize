// Generated by LiveScript 1.2.0
(function(){
  var requires, MatchCompiler, expect;
  requires = require('../../../../../requires');
  requires.test('test_setup');
  MatchCompiler = requires.permit('matcher').compile.MatchCompiler;
  expect = require('chai').expect;
  describe('MatchCompiler', function(){
    var validContext;
    before(function(){
      return validContext = {
        name: 'hello',
        matchOn: void 8
      };
    });
    describe('create w invalid context', function(){
      return specify('throws', function(){
        return expect(function(){
          return new MatchCompiler;
        }).to['throw'];
      });
    });
    describe('create w valid context', function(){
      return specify('throws', function(){
        return expect(function(){
          return new MatchCompiler(validContext);
        }).to.not['throw'];
      });
    });
    return context('created w context', function(){
      var compiler, compiled;
      before(function(){
        validContext = {
          name: 'hello',
          matchOn: void 8
        };
        return compiler = new MatchCompiler(validContext);
      });
      return describe('compile type, match', function(){
        before(function(){
          return compiled = compiler.compile('role', ['editor', 'admin']);
        });
        return specify('compiles', function(){
          return expect(compiled).to.be.instanceOf(Function);
        });
      });
    });
  });
}).call(this);
