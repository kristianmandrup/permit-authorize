// Generated by LiveScript 1.2.0
(function(){
  var Debugger, RuleContainer, RuleRepo;
  Debugger = require('../../util').Debugger;
  RuleContainer = require('../container').RuleContainer;
  module.exports = RuleRepo = (function(){
    RuleRepo.displayName = 'RuleRepo';
    var prototype = RuleRepo.prototype, constructor = RuleRepo;
    importAll$(prototype, arguments[0]);
    function RuleRepo(name, debugging){
      this.name = name;
      this.debugging = debugging;
    }
    prototype.container = function(){
      return new RuleContainer(this.debugging);
    };
    prototype.display = function(){
      console.log("name:", this.name);
      return this.container().display;
    };
    prototype.register = function(act, actions, subjects){
      return this.container().register(act, actions, subjects);
    };
    prototype.match = function(act, accessRequest){
      return this.container().match(act, accessRequest).match();
    };
    prototype.clean = function(){
      return this.container().clean();
    };
    return RuleRepo;
  }(Debugger));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
