// Generated by LiveScript 1.2.0
(function(){
  var Debugger, ExecutionContext;
  Debugger = require('../../util').Debugger;
  module.exports = ExecutionContext = (function(){
    ExecutionContext.displayName = 'ExecutionContext';
    var prototype = ExecutionContext.prototype, constructor = ExecutionContext;
    importAll$(prototype, arguments[0]);
    function ExecutionContext(repo, debugging){
      this.repo = repo;
      this.debugging = debugging;
      this.debug('execute context');
      this;
    }
    prototype.ucan = function(actions, subjects, ctx){
      this.debug('ucan', actions, subjects, ctx);
      return this.repo.registerRule('can', actions, subjects, ctx);
    };
    prototype.ucannot = function(actions, subjects, ctx){
      this.debug('ucannot', actions, subjects, ctx);
      return this.repo.registerRule('cannot', actions, subjects, ctx);
    };
    return ExecutionContext;
  }(Debugger));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
