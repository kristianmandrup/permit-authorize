// Generated by LiveScript 1.2.0
(function(){
  var util, RulesApplier;
  util = require('../util');
  module.exports = RulesApplier = (function(){
    RulesApplier.displayName = 'RulesApplier';
    var prototype = RulesApplier.prototype, constructor = RulesApplier;
    function RulesApplier(rules){
      this.rules = rules;
    }
    prototype.applyRules = function(){
      if (!util.validRules(this.rules)) {
        this.debug('invalid permit rules could not be applied');
        return;
      }
      this.debug('applying rules', this.rules);
      switch (typeof this.rules) {
      case 'function':
        this.rules();
        break;
      case 'object':
        this.applyDefaultRules();
        break;
      default:
        throw Error("rules must be a Function or an Object, was: " + this.rules);
      }
      return this;
    };
    prototype.applyAllRules = function(){
      var rules, ctx, key;
      switch (typeof this.rules) {
      case 'object':
        rules = this.rules;
        ctx = this;
        for (key in rules) {
          util.recurse(rules[key], ctx);
        }
        break;
      default:
        throw Error("rules must be an Object was: " + typeof this.rules);
      }
      return this;
    };
    return RulesApplier;
  }());
}).call(this);
