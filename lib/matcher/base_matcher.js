// Generated by LiveScript 1.2.0
(function(){
  var requires, lo, Intersect, Debugger, BaseMatcher;
  requires = require('../../requires');
  lo = requires.util('lodash-lite');
  Intersect = requires.util('intersect');
  Debugger = requires.lib('debugger');
  BaseMatcher = (function(){
    BaseMatcher.displayName = 'BaseMatcher';
    var prototype = BaseMatcher.prototype, constructor = BaseMatcher;
    importAll$(prototype, arguments[0]);
    function BaseMatcher(accessRequest){
      this.setAccessRequest(accessRequest);
      this.setIntersect();
    }
    prototype.match = function(value){
      return false;
    };
    prototype.deathMatch = function(name, value){
      if (this[name] && value === void 8) {
        return true;
      }
      return false;
    };
    prototype.setAccessRequest = function(accessRequest){
      return this.accessRequest = accessRequest
        ? accessRequest
        : {};
    };
    prototype.setIntersect = function(){
      return this.intersect || (this.intersect = Intersect());
    };
    return BaseMatcher;
  }(Debugger));
  lo.extend(BaseMatcher, Debugger);
  module.exports = BaseMatcher;
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
