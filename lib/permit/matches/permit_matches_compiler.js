// Generated by LiveScript 1.2.0
(function(){
  var PermitMatchesCompiler, toString$ = {}.toString;
  module.exports = PermitMatchesCompiler = (function(){
    PermitMatchesCompiler.displayName = 'PermitMatchesCompiler';
    var prototype = PermitMatchesCompiler.prototype, constructor = PermitMatchesCompiler;
    function PermitMatchesCompiler(permit){
      this.permit = permit;
    }
    prototype.compileMatchers = function(){
      var key;
      this.debug("compile-matchers", this.matchesOn);
      if (toString$.call(this.matchesOn).slice(8, -1) !== 'Object') {
        return;
      }
      this.compiledList = [];
      this.debug("compile...");
      for (key in this.matchesOn) {
        this.matchesProcessor().process(key, this.matchesOn[key]);
      }
      return this.debug('compiled matchers:', this.compiledList);
    };
    prototype.matchesProcessor = function(){
      return this._matchesProcessor || (this._matchesProcessor = new MatchesProcessor(this));
    };
    return PermitMatchesCompiler;
  }());
}).call(this);
