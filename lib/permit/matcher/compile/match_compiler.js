// Generated by LiveScript 1.2.0
(function(){
  var Debugger, MatchCompiler;
  Debugger = require('../../../util').Debugger;
  module.exports = MatchCompiler = (function(){
    MatchCompiler.displayName = 'MatchCompiler';
    var prototype = MatchCompiler.prototype, constructor = MatchCompiler;
    importAll$(prototype, arguments[0]);
    function MatchCompiler(context){
      this.context = context;
    }
    prototype.compile = function(type, match){
      var context;
      this.type = type;
      this.match = match;
      this.debug("compile", this.type, this.match);
      context = this.context;
      return function(accessRequest){
        var matchObj, ref$;
        matchObj = (ref$ = {}, ref$[type] = this.match, ref$);
        self.debug('compiled fun: match-on', accessRequest);
        return context.matchOn(accessRequest, matchObj);
      };
    };
    return MatchCompiler;
  }(Debugger));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
