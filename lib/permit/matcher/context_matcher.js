// Generated by LiveScript 1.2.0
(function(){
  var Debugger, ContextMatcher, toString$ = {}.toString;
  Debugger = require('../../util').Debugger;
  module.exports = ContextMatcher = (function(){
    ContextMatcher.displayName = 'ContextMatcher';
    var prototype = ContextMatcher.prototype, constructor = ContextMatcher;
    importAll$(prototype, arguments[0]);
    function ContextMatcher(context){
      this.context = context;
      if (!this.context.name) {
        throw new Error("Match context (permit) missing a name: " + this.context);
      }
    }
    prototype.match = function(){
      return false;
    };
    prototype.intersectOn = function(partial){
      var res;
      if (partial == null) {
        return false;
      }
      if (toString$.call(partial).slice(8, -1) === 'Function') {
        partial = partial();
      }
      res = this.intersect.on(partial, this.accessRequest);
      return res;
    };
    return ContextMatcher;
  }(Debugger));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
