// Generated by LiveScript 1.2.0
(function(){
  var PermitMatcher, AccessMatcher, mh, MatchingContext, accessMatcherDelegates, i$, len$, name;
  PermitMatcher = require('./permit_matcher');
  AccessMatcher = require('../../access_request').matcher.AccessMatcher;
  mh = MatchingContext = (function(){
    MatchingContext.displayName = 'MatchingContext';
    var prototype = MatchingContext.prototype, constructor = MatchingContext;
    function MatchingContext(context, accessRequest){
      this.context = context;
      this.accessRequest = accessRequest;
    }
    prototype.matching = function(){
      var fingerprint;
      fingerprint = this.accessRequest.fingerprint();
      if (!this.cached_matchers[fingerprint]) {
        this.cached_matchers[fingerprint] = new AccessMatcher(this.accessRequest);
      }
      return this.cached_matchers[fingerprint];
    };
    return MatchingContext;
  }());
  accessMatcherDelegates = ['match-on', 'user', 'role', 'roles', 'subject', 'subject-clazz', 'action', 'context', 'ctx'];
  module.exports = mh;
  for (i$ = 0, len$ = accessMatcherDelegates.length; i$ < len$; ++i$) {
    name = accessMatcherDelegates[i$];
    mh[name] = fn$;
  }
  function fn$(accessRequest, value){
    return this.matching(accessRequest)[helper](value);
  }
}).call(this);
